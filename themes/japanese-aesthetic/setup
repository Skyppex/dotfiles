#!/usr/bin/nu

let themes = $env.CONFIG_PATH | path join "themes" | path expand
let theme = $themes | path join "japanese-aesthetic"
let config = open ($theme | path join "config.toml")

let colors = open ($theme | path join "colors.toml") | get $config.variant
let background_h_path = nu $"($env.CONFIG_PATH)/hypr/scripts/get-wallpaper" h
let background_v_path = nu $"($env.CONFIG_PATH)/hypr/scripts/get-wallpaper" v
let background_h_greet_path = nu $"($env.CONFIG_PATH)/hypr/scripts/get-wallpaper" h greet

let keys = $colors | columns
let values = $colors | values
let kvps = $keys | zip $values

# setup colors for eww

let scss = $kvps | each { |it| 
    let key = $it | get 0
    let value = $it | get 1
    $"$($key): ($value);"
} | to text

let path = ($env.CHEZMOI_PATH | path join "themes/japanese-aesthetic/colors.scss")
$scss | save -f $path

let chezmoi_eww_path = ($env.CHEZMOI_PATH | path join "eww")
cp --force $path ($chezmoi_eww_path | path join "colors.scss")

# setup variables for hyprland

let conf = $kvps | each { |it| 
    let key = $it | get 0
    let value = $it | get 1
    $"$($key) = ($value | str replace "#" "")"
} 
| append $"$background_h = ($background_h_path)"
| append $"$background_v = ($background_v_path)"
| append $"$background_h_greet = ($background_h_greet_path)"

let path = ($env.CHEZMOI_PATH | path join "themes/japanese-aesthetic/variables.conf")
$conf | to text | save -f $path

let chezmoi_hypr_path = ($env.CHEZMOI_PATH | path join "hypr")
cp --force $path ($chezmoi_hypr_path | path join "variables.conf")

# setup variables for hyprlock

let colors_lock = open ($theme | path join "colors.toml") | get $config.lock_variant

let keys = $colors_lock | columns
let values = $colors_lock | values
let kvps = $keys | zip $values

let lock_background_v_path = nu $"($env.CONFIG_PATH)/hypr/scripts/get-wallpaper" --config-option lock_variant v
let lock_background_h_greet_path = nu $"($env.CONFIG_PATH)/hypr/scripts/get-wallpaper" --config-option lock_variant h greet

let conf = $kvps | each { |it| 
    let key = $it | get 0
    let value = $it | get 1
    $"$($key) = ($value | str replace "#" "")"
} 
| append $"$background_v = ($lock_background_v_path)"
| append $"$background_h_greet = ($lock_background_h_greet_path)"

let path = ($env.CHEZMOI_PATH | path join
    "themes/japanese-aesthetic/variables_lock.conf")
$conf | to text | save -f $path

let chezmoi_hypr_path = ($env.CHEZMOI_PATH | path join "hypr")
cp --force $path ($chezmoi_hypr_path | path join "variables_lock.conf")

# setup lua colors

let lua = "return {" | append ($kvps | each { |it| 
    let key = $it | get 0
    let value = $it | get 1
    $"\t($key) = \"($value)\","
}) | append "}" | to text

let path = ($env.CHEZMOI_PATH | path join "themes/japanese-aesthetic/colors.lua")
$lua | to text | save -f $path

let chezmoi_lua_path = ($env.CHEZMOI_PATH | path join "nvim/lua/skypex")
cp --force $path ($chezmoi_lua_path | path join "colors.lua")

# setup nushell colors

let nushell = "let colors = {" | append ($kvps | each { |it| 
    let key = $it | get 0
    let value = $it | get 1
    $"\t($key): \"($value)\""
}) | append "}" | to text

let path = ($env.CHEZMOI_PATH | path join "themes/japanese-aesthetic/colors.nu")
$nushell | to text | save -f $path

let chezmoi_lua_path = ($env.CHEZMOI_PATH | path join "nushell")
cp --force $path ($chezmoi_lua_path | path join "colors.nu")

# setup starship
# this ones annoying, i have to generate the entire file with the colors i want

let starship = [
    `# Get editor completions based on the config schema`,
    `"$schema" = 'https://starship.rs/config-schema.json'`,
    ``,
    `# Config`,
    `command_timeout = 3000`,
    ``,
    `# Disable the blank line at the start of the prompt`,
    `add_newline = false`,
    ``,
    `format = """`,
    `$character\`,
    `$os\`,
    `$directory\`,
    `$git_branch\`,
    `$git_status\`,
    `[ ](prev_bg)`,
    `"""`,
    ``,
    `# An alternative to the username module which displays a symbol that`,
    `# represents the current operating system`,
    `[os]`,
    ([`style = "fg:`, $colors.background1, ` bg:prev_fg"`] | str join ""),
    `format = "[$symbol]($style)"`,
    `disabled = false                # Disabled by default`,
    ``,
    `[os.symbols]`,
    `Arch = "󰣇 "`,
    `Linux = " "`,
    `NixOS = " "`,
    `Ubuntu = " "`,
    `Windows = " "`,
    ``,
    `[directory]`,
    ([`style = "fg:`, $colors.background1, ` bg:prev_bg"`] | str join ""),
    `format = "[ $path]($style)"`,
    ``,
    `# Here is how you can shorten some long paths by text replacement`,
    `# similar to mapped_locations in Oh My Posh:`,
    `[directory.substitutions]`,
    `"Contacts" = " "`,
    `"Kontakter" = " "`,
    `"Desktop" = " "`,
    `"Skrivebord" = " "`,
    `"Documents" = "󰈙 "`,
    `"Dokumenter" = "󰈙 "`,
    `"Downloads" = " "`,
    `"Nedlastinger" = " "`,
    `"Movies" = " "`,
    `"Filmer" = " "`,
    `"Music" = " "`,
    `"Musikk" = " "`,
    `"OneDrive" = " "`,
    `"Pictures" = " "`,
    `"Bilder" = " "`,
    `# Keep in mind that the order matters. For example:`,
    `# "Important Documents" = " 󰈙 "`,
    `# will not be replaced, because "Documents" was already substituted before.`,
    `# So either put "Important Documents" before "Documents" or use the substituted version:`,
    `# "Important 󰈙 " = " 󰈙 "`,
    ``,
    `# VCS Branch`,
    `[git_branch]`,
    `symbol = " "`,
    ([`style = "fg:`, $colors.background1, ` bg:prev_bg"`] | str join ""),
    `format = '[ $symbol$branch]($style)'`,
    ``,
    `[git_state]`,
    `rebase = " "`,
    `merge = " "`,
    `revert = "󰕍 "`,
    `cherry_pick = " "`,
    `bisect = "󰕝 "`,
    `am = "󰛮 "`,
    `am_or_rebase = "󰛮 / "`,
    ([`style = "fg:`, $colors.background1, ` bg:prev_bg"`] | str join ""),
    `format = ' \([$state($progress_current/$progress_total)]($style)\)'`,
    ``,
    `[git_status]`,
    `disabled = false`,
    ([`style = "fg:`, $colors.background1, ` bg:prev_bg"`] | str join ""),
    `format = '[ $all_status$ahead_behind]($style)'`,
    ``,
    `[character]`,
    ([`success_symbol = "[](fg:`, $colors.primary, `)"`] | str join ""),
    ([`error_symbol = "[](`, $colors.error, `)"`] | str join ""),
    ([`vimcmd_symbol = "[](`, $colors.background1 `)"`] | str join ""),
    `format = "$symbol"`
]

let path = ($env.CHEZMOI_PATH | path join "themes/japanese-aesthetic/starship.toml")
$starship | str join "\n" | to text | save -f $path

let chezmoi_starship_path = $env.CHEZMOI_PATH
cp --force $path ($chezmoi_starship_path | path join "starship.toml")

chezmoi apply --force

