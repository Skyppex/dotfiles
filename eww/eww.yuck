(defwidget bar []
  (centerbox :orientation "h"
    (music)
    time
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric
      :label "${ volume > 30 ? " " : volume > 0 ? " " : " " }"
      :value volume
      :min 0
      :max 100
      :onchange "")
    (metric
      :label "󰍛"
      :value {EWW_RAM.used_mem_perc}
      :min 0
      :max 100
      :onchange "")
    (metric
      :label ""
      :min 0
      :max 100
      :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
      :onchange "")))

(defwidget music []
  (box
    :class "music-box"
    :space-evenly false
    (box
      :class "music"
      :hexpand false
      :vexpand false
      :style 'background-image: url("${album-art}")'
      :space-evenly false
      (box
        :class "music-text"
        :halign "center"
        ;:style "background-image: /tmp/eww/album-art.jpg"
        {music != "" ? "${music}" : ""}))
    (box :hexpand true)
  ))

(defwidget metric [label value min max onchange]
  (box
    :orientation "h"
    :class "metric"
    :space-evenly false
    (box :class "label" label)
    (scale
      :min min
      :max max
      :active {onchange != ""}
      :value value
      :onchange onchange)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(deflisten album-art :initial "python3 scripts/get-album-art"
  "python3 scripts/get-album-art || true")

(defpoll volume :interval "150ms"
  "nu -c '(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk `{print $2}` | into float) * 100'")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 1
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "32px"
    :anchor "top center")
  :stacking "fg"
  :exclusive true
  (bar)
)

